library(ggplot2)
library(car)
library(car)
library(effects)
library(gridExtra)
library(ggpubr)
library(ellipse)
?install.packages
install.packages('ellipse')
library(ellipse)
library(dplyr)
library(vtable)
install.packages('vtable')
library(vtable)
library(reshape)
install.packages('reshape')
library(reshape)
library(corrplot)
library(knitr)
library(kableExtra)
library(GLMsData)
# če so podatki zunanji
data = data(lungcap)
data
data = lungcap
dim(data) # dimenzije vrstice, stolpci
head(data) # začetek tabele
str(data)
summary(data) # min, max, kvantili, povprečje po spr
levels(data$Gender) # levli faktorske spr
levels(lungcap$Gender)
# Spremeni napovedno_spr v faktor
data$gender = factor(data$Gender, labels = c("Ženske", "Moški"))
data$Smoke = factor(data$Smoke, labels=c("Ne", "Da"))
# Spremeni enote (recimo inch → cm)
data$Ht = data$Ht*2.54
head(data) # začetek tabele
rownames(data)
# Osnovni razsevni grafikon - 1. možnost
ggplot(data = data) +
geom_point(mapping = aes(x = Ht, y = FEV)) +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Osnovni razsevni grafikon - 2. možnost
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point() +
xlim(c(_,_)) +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw() # nariši več takih grafov za vsako številsko_napovedno_spr, odzivna_spr je ista, za opisne_napovedne_spr naredi boxplote → združi z ggarrange
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point()
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point() +
xlim(c(_,_))
# Osnovni razsevni grafikon - 2. možnost
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point() +
xlim(c("_","_")) +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw() # nariši več takih grafov za vsako številsko_napovedno_spr, odzivna_spr je ista, za opisne_napovedne_spr naredi boxplote → združi z ggarrange
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point()
# Osnovni razsevni grafikon - 2. možnost
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point() +
xlim(c(100,190)) +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw() # nariši več takih grafov za vsako številsko_napovedno_spr, odzivna_spr je ista, za opisne_napovedne_spr naredi boxplote → združi z ggarrange
# Osnovni razsevni grafikon - 2. možnost
ggplot(data, aes(x = Ht, y = FEV)) +
geom_point() +
xlim(c(110,190)) +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw() # nariši več takih grafov za vsako številsko_napovedno_spr, odzivna_spr je ista, za opisne_napovedne_spr naredi boxplote → združi z ggarrange
hist(data$Ht, main="", xlab="", ylab="", breaks=20)
hist(data$Age, main="", xlab="", ylab="")
hist(data$Ht, main="Porazdelitev spremenljivke visina", xlab="Ht", ylab="freq", breaks=20)
hist(data$Age, main="Porazdelitev spremenljivke visina", xlab="Age", ylab="freq")
boxplot(placa$wage ~ placa$education,
xlab = "Age", ylab = "FEV")
boxplot(data$FEV ~ data$Age,
xlab = "Age", ylab = "FEV")
View(data)
# Spremeni napovedno_spr v faktor
data$Gender = factor(data$Gender, labels = c("Ženske", "Moški"))
View(data)
data = head(data[,1:5])
data = lungcap # da se df imenuje data za naprej...
# Spremeni napovedno_spr v faktor
data$Gender = factor(data$Gender, labels = c("Ženske", "Moški"))
data$Smoke = factor(data$Smoke, labels=c("Ne", "Da"))
# Spremeni enote (recimo inch → cm)
data$Ht = data$Ht*2.54
View(data)
boxplot(data$FEV ~ data$Smoke,
xlab = "Smoke", ylab = "FEV")
# Osnovni boxplot
ggplot(data, aes(x=Gender, y=FEV)) +
geom_boxplot() +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw()
# Preglej vse kombinacije opisnih_napovednih_spr - boxploti
ggplot(data, aes(x=opisna_napovedna_spr1, y=FEV)) +
geom_boxplot() +
facet_wrap(.~ opisna_napovedna_spr2) +
xlab("opisna_napovedna_spr1") + ylab("odzivna_spr (enota)") + theme_bw()
# Osnovni boxplot
ggplot(data, aes(x=Gender, y=FEV)) +
geom_boxplot() +
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") + theme_bw()
ggplot(data, aes(x=Gender, y=FEV)) +
geom_boxplot() +
facet_wrap(.~ Smoke) +
xlab("opisna_napovedna_spr1") + ylab("odzivna_spr (enota)") + theme_bw()
# Vse kombinacije opisnih_napovednih_spr z gladilniki - za preverjanje linearnosti → ta isti graf izriši za vsako od številskih_napovednih_spr!! (samo to zamenjaj "x= " in ime x-osi) → iste grafe ponovi tudi, če odzivno_spr transformiraš (recimo daj log(odzivna_spr))
ggplot(data, aes(x=Ht, y=FEV)) +
geom_point() +
geom_smooth(se=FALSE) +
facet_grid(Gender ~ Smoke) +
xlab("številska_napovedna_spr") + ylab("odzivna_spr (enota)") + theme_bw()
# Vse kombinacije opisnih_napovednih_spr z gladilniki - za preverjanje linearnosti → ta isti graf izriši za vsako od številskih_napovednih_spr!! (samo to zamenjaj "x= " in ime x-osi) → iste grafe ponovi tudi, če odzivno_spr transformiraš (recimo daj log(odzivna_spr))
ggplot(data, aes(x=Ht, y=FEV)) +
geom_point() +
geom_smooth(se=TRUE) +
facet_grid(Gender ~ Smoke) +
xlab("številska_napovedna_spr") + ylab("odzivna_spr (enota)") + theme_bw()
# Osnovni razsevni grafikon, če imaš 2 napovedni spr: eno opisno in eno številsko
ggplot(data = data, aes(x = Ht, y = FEV, col = Gender)) +
geom_point() +
xlab("številska_napovedna_spr (enota)") + ylab("odzivna_spr (mm)")
# Boxplot → uporabi za opisne napovedne spr
boxplot(FEV ~ Gender, data = data, ylab = c("odzivna_spr (enota)"), xlab = "opsina_napovedna_spr")
# V kakšni zvezi so pari analiziranih spremenljivk
pairs(data) # Robna odvisnost odzivne spr od napovednih spr, vsaka slika zase ne upošteva prisotnosti drugih napovednih spr.
# V ukazu scatterplot iz paketa car se z argumentom id na sliki izpišeta imeni izstopajočih podatkov in boxplota
# S tem prikazom lahko probaš tudi npr. transformirati odzivno spr in prikazati še enkrat isto!
scatterplot(FEV ~ Age, regLine = FALSE, smooth = FALSE, boxplots = 'xy',
xlab = c("napovedna_spr (enota)"), ylab = c("odzivna_spr (enota)"),
data = data, pch = 16,
id = list(n = 2, location = "lr")) # id = TRUE
lm(FEV ~ Gender * Age, data = data)
lm(FEV ~ Gender + Age, data = data)
summary(lm(formula = FEV ~ Gender * Age, data = data))
model_gender = lm(FEV ~ Gender, data = data)
# Regresijski osamelci: studentizirani ostanki glede na kvantile 𝑡(SP=𝑛−𝑘−2) in pripadajoča 95 % točkovna ovojnica (QQ grafikon)
qqPlot(model_gender, id = TRUE)
# Za vsako točko posebej preverjamo, ali je regresĳski osamelec. Ničelna domneva pravi, da 𝑖-ta točka ni regresĳski osamelec. Izpiše vse tiste točke, pri katerih je nepopravljena 𝑝-vrednost pod 0.05.
outlierTest(model_gender) # točka je reg osamelec, če je Bonferroni p-vrednost manjša od 0.05
model_age = lm(FEV ~ Age, data = data)
model_op_int = lm(FEV ~ Gender * Age, data = data)
qqPlot(model_age, id = TRUE)
qqPlot(model_op_int, id = TRUE)
outlierTest(model_age) # točka je reg osamelec, če je Bonferroni p-vrednost manjša od 0.05
outlierTest(model_op_int, id = TRUE) # točka je reg osamelec, če je Bonferroni p-vrednost manjša od 0.05
# Da preveriš kako se modelske napovedi razlikujejo od dejanskih točk - regresijski osamelci
data[c(539, 576), ]
fitted(model_gender)[c(cifra1, cifra2)]
fitted(model_gender)[c(539, 576)]
fitted(model_op_int)[c(539, 576)]
log(data$model_op_int[c(539, 576)]) # brez log, če ga ne uporabljaš!
data$model_op_int[c(539, 576)] # brez log, če ga ne uporabljaš!
data$FEV[c(539, 576)] # brez log, če ga ne uporabljaš!
# Vzvodne točke:  Vzvod v odvisnosti od napovedne_spr za model
plot(data$Age, hatvalues(model), pch = 16,
xlab = c("napovedna_spr (enota)"), ylab = c("Vzvod"))
# Vzvodne točke:  Vzvod v odvisnosti od napovedne_spr za model
plot(data$Age, hatvalues(model_op_int), pch = 16,
xlab = c("napovedna_spr (enota)"), ylab = c("Vzvod"))
# Grafični prikaz studentiziranih ostankov, vzvodov in Cookove razdalje (ploščina kroga je sorazmerna Cookovi razdalji) za model
influencePlot(model_op_int,
id = list(method = "noteworthy", n = 2, cex = 1, location = "lr"),
xlab = "Vzvodi", ylab = "Studentizirani ostanki") # n = število točk z največjo vrednostjo studentiziranega ostanka, 𝑎 točk z največjim vzvodom in 𝑎 točk z največjo Cookovo razdaljo (pogosto se točke prekrivajo in jih je v izpisu manj kot 3𝑎)
# Vplivne točke:
vplivne = lm.influence(model_op_int)
names(vplivne)
sort(vplivne$hat, decreasing = TRUE)[1:4] # 4 točke z največjimi vzvodi
vplivne$coeff["specifična_točka",] # spremembi ocen b_0 in b_1, če specifično točko izločimo
View(vplivne)
vplivne$coeff["628",] # spremembi ocen b_0 in b_1, če specifično točko izločimo
sort(vplivne$coeff[,1],decreasing=TRUE)[1:4] # 4 točke z največjo spremembo b_0
sort(vplivne$coeff[,2])[1:4] # 4 točke z največjo spremembo naklona
sort(vplivne$sigma)[1:4] # izpis standardnih napak regresije brez vključenega podatka/točke
subset(data, subset = data$Age != "628")
vplivne$coeff["628",]
names(vplivne)
names(table(vplivne))
table(vplivne)
# Ena napovedna spr
m0 = lm(FEV ~ Gender, data = data)
# Dve napovedni spr
m1 = lm(odzivna_spr ~ Gender + Age, data = data)
# Dve napovedni spr
m1 = lm(FEV ~ Gender + Age, data = data)
# Komponente modela:
names(m0)
# Koeficienti modela
m0$coef
model = lm(FEV ~ Gender * Age, data = data)
modelska_matrika = model.matrix(model.m2)
head(modelska_matrika, n = 3)
modelska_matrika = model.matrix(model)
head(modelska_matrika, n = 3)
# ... nadaljuj z
anova(model)
# Izbira transformacije
symbox(~ FEV, xlab = "Lambda",
ylab = "Transformirane vrednosti za odzivno_spr",
data = data) # Izbereš tisto, kjer je boxplot najbolj simetričen, najbolj podoben ~ N
# Oceni, katera lambda bi bila glede na maximum likelihood primerna
summary(powerTransform(model)) # razlaga spodaj
# Logaritem verjetja v odvisnosti od 𝜆 za model, optimalna vrednost za 𝜆 in njen 95 % IZ
par(mar = c(4, 4, 1, 1))
boxCox(model) # Pazi pri teh transformacijah, včasih ni razložljivo!
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Ht, data = data)
(b = coefficients(model_exp))
exp(b[1]) # Eksponiraj intercept (beta0) → Interpretacija je zdaj lahko: Ob napovedni_spr = 0, je odzivna_spr enaka exp(b[1]).
exp(confint(model_exp)[1,]) # Eksponiraj IZ za intercept
exp(b[2])-1 # Eksponiraj beta1 → interpretacija je zdaj lahko: Če se napovedna_spr spremeni za 1, se odzivna_spr spremeni za exp(b[2])-1 * 100 %.
exp(confint(model_exp)[2,])-1 # Eksponiraj IZ za beta1
summary(model_exp)$r.squared
## 1.1 način
plot(effect(c("Ht"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Ht*Age*Gender*Smoke, data = data)
(b = coefficients(model_exp))
exp(b[1]) # Eksponiraj intercept (beta0) → Interpretacija je zdaj lahko: Ob napovedni_spr = 0, je odzivna_spr enaka exp(b[1]).
exp(confint(model_exp)[1,]) # Eksponiraj IZ za intercept
exp(b[2])-1 # Eksponiraj beta1 → interpretacija je zdaj lahko: Če se napovedna_spr spremeni za 1, se odzivna_spr spremeni za exp(b[2])-1 * 100 %.
exp(confint(model_exp)[2,])-1 # Eksponiraj IZ za beta1
summary(model_exp)$r.squared
## 1.1 način
plot(effect(c("Ht", "Age"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="", ylim=c(_, _))
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Age*Ht*Gender*Smoke, data = data)
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
mod2.int <- lm(log(FEV) ~ Age*Ht*Gender*Smoke, data=lungcap)
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
View(lungcap)
lungcap$Ht <- lungcap$Ht*2.54
lungcap$Smoke <- factor(lungcap$Smoke, labels=c("Ne", "Da"))
levels(lungcap$Gender)
levels(lungcap$Gender) <- c("Ženske", "Moški")
mod2.int <- lm(log(FEV) ~ Age*Ht*Gender*Smoke, data=lungcap)
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # O
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="")
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
## 1.2 način
plot(Effect(c("Age", "Ht", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="", multiline = TRUE)
## 2. način
ggplot(data = data, aes(x = Ht, y = log(FEV))) +
geom_point() + stat_smooth(method = "lm") +
xlab("napovedna_spr (enote!!!)") + ylab("log(odzivna_spr)") # Odvisnost log(odzivna_spr) od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved log(odzivna_spr)
# Grafični prikazi (de-transformacija) za exp zvezo
ggplot(data = data, aes(x = Ht, y = FEV)) +
geom_point() + xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") +
stat_function(fun = function(Ht) exp(b[1] + b[2] * Ht)) #  Odvisnost odzivna_spr od napovedna_spr; eksponentni model
head(model.matrix(model)) # da preveriš referenčne skupine
tail(model.matrix(model))
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = napovedna_spr, y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht*Gender, y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = c(Ht, Gender), y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = c(Ht, Gender), y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht, y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
summary(m1)
# Graf dodane spremenljivke
avPlots(m1, ylim = c(0, 200)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(0, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-1, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-3, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-3, 5)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf parcialnih ostankov
crPlots(m1, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
# Graf parcialnih ostankov
crPlots(model_exp, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-10,10)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-5,5)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), multiline=FALSE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), partial.residuals = TRUE, multiline=FALSE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
