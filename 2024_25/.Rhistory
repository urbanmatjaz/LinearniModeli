sort(vplivne$coeff[,1],decreasing=TRUE)[1:4] # 4 točke z največjo spremembo b_0
sort(vplivne$coeff[,2])[1:4] # 4 točke z največjo spremembo naklona
sort(vplivne$sigma)[1:4] # izpis standardnih napak regresije brez vključenega podatka/točke
subset(data, subset = data$Age != "628")
vplivne$coeff["628",]
names(vplivne)
names(table(vplivne))
table(vplivne)
# Ena napovedna spr
m0 = lm(FEV ~ Gender, data = data)
# Dve napovedni spr
m1 = lm(odzivna_spr ~ Gender + Age, data = data)
# Dve napovedni spr
m1 = lm(FEV ~ Gender + Age, data = data)
# Komponente modela:
names(m0)
# Koeficienti modela
m0$coef
model = lm(FEV ~ Gender * Age, data = data)
modelska_matrika = model.matrix(model.m2)
head(modelska_matrika, n = 3)
modelska_matrika = model.matrix(model)
head(modelska_matrika, n = 3)
# ... nadaljuj z
anova(model)
# Izbira transformacije
symbox(~ FEV, xlab = "Lambda",
ylab = "Transformirane vrednosti za odzivno_spr",
data = data) # Izbereš tisto, kjer je boxplot najbolj simetričen, najbolj podoben ~ N
# Oceni, katera lambda bi bila glede na maximum likelihood primerna
summary(powerTransform(model)) # razlaga spodaj
# Logaritem verjetja v odvisnosti od 𝜆 za model, optimalna vrednost za 𝜆 in njen 95 % IZ
par(mar = c(4, 4, 1, 1))
boxCox(model) # Pazi pri teh transformacijah, včasih ni razložljivo!
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Ht, data = data)
(b = coefficients(model_exp))
exp(b[1]) # Eksponiraj intercept (beta0) → Interpretacija je zdaj lahko: Ob napovedni_spr = 0, je odzivna_spr enaka exp(b[1]).
exp(confint(model_exp)[1,]) # Eksponiraj IZ za intercept
exp(b[2])-1 # Eksponiraj beta1 → interpretacija je zdaj lahko: Če se napovedna_spr spremeni za 1, se odzivna_spr spremeni za exp(b[2])-1 * 100 %.
exp(confint(model_exp)[2,])-1 # Eksponiraj IZ za beta1
summary(model_exp)$r.squared
## 1.1 način
plot(effect(c("Ht"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Ht*Age*Gender*Smoke, data = data)
(b = coefficients(model_exp))
exp(b[1]) # Eksponiraj intercept (beta0) → Interpretacija je zdaj lahko: Ob napovedni_spr = 0, je odzivna_spr enaka exp(b[1]).
exp(confint(model_exp)[1,]) # Eksponiraj IZ za intercept
exp(b[2])-1 # Eksponiraj beta1 → interpretacija je zdaj lahko: Če se napovedna_spr spremeni za 1, se odzivna_spr spremeni za exp(b[2])-1 * 100 %.
exp(confint(model_exp)[2,])-1 # Eksponiraj IZ za beta1
summary(model_exp)$r.squared
## 1.1 način
plot(effect(c("Ht", "Age"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="", ylim=c(_, _))
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
# Interpretacija eksponentne zveze:
model_exp = lm(log(FEV) ~ Age*Ht*Gender*Smoke, data = data)
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # Odvisnost odzivne_spr od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved odzivne_spr, skala za odzivno_spr je logaritemska!!!!
mod2.int <- lm(log(FEV) ~ Age*Ht*Gender*Smoke, data=lungcap)
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
View(lungcap)
lungcap$Ht <- lungcap$Ht*2.54
lungcap$Smoke <- factor(lungcap$Smoke, labels=c("Ne", "Da"))
levels(lungcap$Gender)
levels(lungcap$Gender) <- c("Ženske", "Moški")
mod2.int <- lm(log(FEV) ~ Age*Ht*Gender*Smoke, data=lungcap)
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
## 1.1 način
plot(effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "odzivna_spr")), main = "") # O
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="")
## 1.2 način
plot(Effect(c("Ht", "Age", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
## 1.2 način
plot(Effect(c("Age", "Ht", "Smoke", "Gender"), model_exp,
transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")),
multiline=TRUE, ci.style="bands", main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)),
axes = list(y = list(lab = "odzivna_spr (enota)", type = "response")), main="")
plot(Effect(c("Age","Ht","Gender","Smoke"), model_exp, partial.residuals=TRUE, transformation = list(link = log,inverse = exp)), main="", multiline = TRUE)
## 2. način
ggplot(data = data, aes(x = Ht, y = log(FEV))) +
geom_point() + stat_smooth(method = "lm") +
xlab("napovedna_spr (enote!!!)") + ylab("log(odzivna_spr)") # Odvisnost log(odzivna_spr) od napovedna_spr in pripadajoča regresijska premica s 95 % IZ za povprečno napoved log(odzivna_spr)
# Grafični prikazi (de-transformacija) za exp zvezo
ggplot(data = data, aes(x = Ht, y = FEV)) +
geom_point() + xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") +
stat_function(fun = function(Ht) exp(b[1] + b[2] * Ht)) #  Odvisnost odzivna_spr od napovedna_spr; eksponentni model
head(model.matrix(model)) # da preveriš referenčne skupine
tail(model.matrix(model))
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = napovedna_spr, y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht*Gender, y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = c(Ht, Gender), y = odzivna_spr)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = c(Ht, Gender), y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht, y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
summary(m1)
# Graf dodane spremenljivke
avPlots(m1, ylim = c(0, 200)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(0, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-1, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-3, 3)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-3, 5)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf parcialnih ostankov
crPlots(m1, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
# Graf parcialnih ostankov
crPlots(model_exp, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-10,10)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-5,5)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Ht", "Age", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), multiline=TRUE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), multiline=FALSE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
plot(Effect(c("Age","Ht","Gender","Smoke"), mod2.int, partial.residuals=TRUE), main="")
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), partial.residuals = TRUE, multiline=FALSE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht, y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
library(ggplot2)
library(car)
library(effects)
library(gridExtra)
library(ggpubr)
library(ellipse)
library(dplyr)
library(vtable)
library(reshape)
library(corrplot)
library(knitr)
library(kableExtra)
library(GLMsData)
# Grafični prikazi (de-transformacija) za exp zvezo
ggplot(data = data, aes(x = Ht, y = FEV)) +
geom_point() + xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)") +
stat_function(fun = function(Ht) exp(b[1] + b[2] * Ht)) #  Odvisnost odzivna_spr od napovedna_spr; eksponentni model
head(model.matrix(model)) # da preveriš referenčne skupine
tail(model.matrix(model))
# Dodatek regresijske premice na razsevni grafikon
ggplot(data = data, mapping = aes(x = Ht, y = FEV)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # če daš se=TRUE dobiš 95% IZ za povprečno napoved!!
xlab("napovedna_spr (enote)") + ylab("odzivna_spr (enote)")
# Graf dodane spremenljivke
avPlots(m1, ylim = c(-3, 5)) # Vpliv vsake od napovednih spr na odzivno spr ob upoštevanju ostalih spr v modelu (= pri konstantni vrednosti ostalih spr) - naklon je enak oceni parametrov za tisto spremenljivko
# Graf parcialnih ostankov
crPlots(m1, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
plot(Effect(c("Age", "Ht", "Gender", "Smoke"), model_exp), partial.residuals = TRUE, multiline=FALSE,
ci.style="bands", main="", ylim=c(-3,3)) #  Modelske napovedi za odzivno_spr v odvisnosti od spr1, spr2 in spr3 hkrati, pri povprečni vrendosti spr4 za model → Z INTERAKCIJAMI (iste grafe narišeš pred in po vključitvijo interakcij!!) → glej interakcije
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(m1, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(_, _), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(m1, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(-3, 3), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(m1, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(0, 6), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(m1, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(0, 8), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
summary(m1)
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(model_op_int, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(0, 8), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(model_exp, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(0, 8), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Druga možnost grafa parcialnih ostankov
plot(predictorEffects(m1, ~., partial.residuals = TRUE),
ci.style = "none", ylim = c(0, 8), main = "") # Napovedane vrednosti za povprečno odzivno_spr za m1 in parcialni ostanki z gladilnikom; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Grafični prikaz napovedi in pripadajočih intervalov zaupanja za povprečne napovedi
plot(predictorEffects(m1, ~.), ylim = c(0,-8), main = "") # Napovedane vrednosti in 95 % intervali zaupanja za povprečno odzivno_spr za m1; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
# Grafični prikaz napovedi in pripadajočih intervalov zaupanja za povprečne napovedi
plot(predictorEffects(m1, ~.), main = "") # Napovedane vrednosti in 95 % intervali zaupanja za povprečno odzivno_spr za m1; levo: glede na napovedno_spr1 pri povprečni napovedni_spr2, desno: glede na napovedno_spr2 pri povprečni napovedni_spr1.
summary(model)
#!!! graf parcialnih ostankov razlaga:
plot(predictorEffect(c("Age"), model))
#!!! graf parcialnih ostankov razlaga:
plot(predictorEffect(c("Age", "Gender"), model))
#!!! graf parcialnih ostankov razlaga:
plot(predictorEffect(c("Gender"), model))
# Graf parcialnih ostankov
crPlots(m1, ylim = c(-5, 5))# Odvisnosti odzivne spr od posamezne napovedne spr upoštevajoč drugo/-e spr v modelu → BREZ INTERAKCIJ
summary(m0)
summary(model)
# slike ostankov
par(mfrow = c(2, 2))
plot(model)
# Cel izpis za model
summary(model)
names(summary(model)) # za dodatne ali posamezne izpise
# SSmodel in SSresidual
anova(m0)
# SSmodel in SSresidual
anova(model)
# Intervala zaupanja za parametra modela
confint(model) # Interpretacija: Če se napovedna_spr poveča za 1 (enota), pri 95 % zaupanju pričakujemo, da se bo odzivna_spr povečala na intervalu spodnja_meja (enota) do zgornja_meja (enota). → lahko pri interpretaciji tudi množiš vse z 10 ali 100
summary(m1)
# Cel izpis za model
summary(model)
# F-test za dva gnezdena modela:
anova(m1, model) #prvi je gnezden
# R2 in ocene parametrov s pripadajočimi 95 % parcialnimi IZ
summary(model.p)$r.squared
# R2 in ocene parametrov s pripadajočimi 95 % parcialnimi IZ
summary(model)$r.squared
# Indentifikacija interakcije med dvema številskima napovednima spr
graf1 = plot(Effect(c("Age", "gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
# Indentifikacija interakcije med dvema številskima napovednima spr
graf1 = plot(Effect(c("Age", "Gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
?par
graf1 = plot(Effect(c("Age", "Gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
par(mfrow = c(2,1))
# Indentifikacija interakcije med dvema številskima napovednima spr
graf1 = plot(Effect(c("Age", "Gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
par(mfrow = c(1,2))
# Indentifikacija interakcije med dvema številskima napovednima spr
graf1 = plot(Effect(c("Age", "Gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
par(mfrow = c(1,1))
# Indentifikacija interakcije med dvema številskima napovednima spr
graf1 = plot(Effect(c("Age", "Gender"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
graf2 = plot(Effect(c("Gender", "Age"), model, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
grid.arrange(graf1, graf2) # razlaga spodaj
# Rezultati sekvenčnih F-testov
anova(model) # Razlaga: P04, stran 24
# Interakcija med opisno in številsko napovedno spr
# Ta plot je bil narejen za vzporedni premici:
plot(Effect(c("Age", "Gender"), model), # lahko isti graf narediš brez/z interakcijo
multiline = TRUE, ci.style = "bands",
key.args = list(x = 0.05, y = 0.8, corner = c(0, 0)),
main = "", lty = c(1:2))
# Interakcija med opisno in številsko napovedno spr
# Ta plot je bil narejen za vzporedni premici:
plot(Effect(c("Age", "Gender"), m1), # lahko isti graf narediš brez/z interakcijo
multiline = TRUE, ci.style = "bands",
key.args = list(x = 0.05, y = 0.8, corner = c(0, 0)),
main = "", lty = c(1:2))
odel
# Interakcija med opisno in številsko napovedno spr
# Ta plot je bil narejen za vzporedni premici:
plot(Effect(c("Age", "Gender"), model), # lahko isti graf narediš brez/z interakcijo
multiline = TRUE, ci.style = "bands",
key.args = list(x = 0.05, y = 0.8, corner = c(0, 0)),
main = "", lty = c(1:2))
setwd("C:/Users/Uporabnik/Desktop/Magisterij/Linearni_modeli/git/LinearniModeli/2024_25")
postaje<-read.table("POSTAJE.txt", header=TRUE, sep="\t")
str(postaje)
head(postaje)
summary(postaje)
rownames(postaje)<-postaje$Postaja
rownames(postaje)[is.na(postaje$x.gdol)]
rownames(postaje)[is.na(postaje$y.gsir)]
postaje <- postaje[postaje$Postaja != "Kredarica",]
# koordinate geografske dolžine in širine izrazimo v km
postaje$x <- postaje$x.gdol/1000
postaje$y <- postaje$y.gsir/1000
# izločimo dve postaji, ki nimata podatka za geografsko dolžino
postaje <- na.omit(postaje)
dim(postaje)
# za grafični prikaz
library(car)
scatterplot(padavine ~ x, regLine = FALSE, smooth = FALSE, boxplots = 'xy',
xlab = c("Geografska dolžina (km)"), ylab = c("Padavine (mm)"),
data = postaje, pch = 16,
id = list(n = 2, location = "lr")) # id = TRUE
model.1 <- lm(padavine~x, data=postaje)
par(mfrow = c(2, 2))
plot(model.1)
par(mfrow = c(1, 1))
symbox(~padavine, xlab= "Lambda", ylab="Transformirane vrednosti za padavine",
data=postaje)
summary(powerTransform(model.1))
boxCox(model.1)
model.2 <- lm(1/padavine~x, data=postaje)
par(mfrow = c(2, 2), oma=c(0,0,3,0))
plot(model.2)
par(mfrow = c(2, 2))
plot(model.1)
kovine0<-read.table("KOVINE.txt", header=TRUE, sep="\t")
kovine0$razdalja<-kovine0$razdalja.m/1000
# izločimo vzorčne točke z oddaljenostjo več kot 10 km
kovine<-kovine0[kovine0$razdalja<10,]
dim(kovine)
summary(kovine[,c("Pb","razdalja")])
scatterplot(Pb~razdalja, regLine=F, xlab="Razdalja (km)",
ylab="Pb (mg/kg)", smooth=list(span=0.5, spread=FALSE),
boxplots='xy', data=kovine, pch=16)
scatterplot(log(Pb)~razdalja, regLine=F, smooth=list(span=0.5, spread=FALSE),
xlab="Razdalja (km)", ylab="log(Pb)",
boxplots='xy', data=kovine, pch=16)
model.Pb <- lm(log(Pb)~razdalja, data=kovine)
par(mfrow = c(2, 2),  oma = c(0, 0, 2, 0))
plot(model.Pb)
par(mfrow = c(1, 1))
influencePlot(model.Pb, id.n=2)
outlierTest(model.Pb)
summary(model.Pb)
confint(model.Pb)
# antilogaritmiranje ocen parametrov za povprečno napoved pri cinkarni
# in za relativno spremembo Pb z razdaljo ter pripadajoči 95 % IZ
exp(b[1])
exp(confint(model.Pb)[1,])
# za vsak km stran od cinkarne v povprečju vsebnost svinca pade za 20%
exp(confint(model.Pb)[2,])-1
exp(b[2])-1
(exp(b[2])-1) * 100
# za vsak km stran od cinkarne v povprečju vsebnost svinca pade za 20%
exp(confint(model.Pb)[2,])-1
#  grafični prikaz napovedi s paketom effects
library(lattice)
library(effects)
plot(Effect(c("razdalja"), model.Pb), ci.style = "bands", main = "",
xlab = "Razdalja (km)", ylab = "log(Pb)")
plot(Effect(c("razdalja"), model.Pb,
transformation = list(link = log, inverse = exp)),
axes = list(y = list(lab = "Pb (mg/kg)", type = "response")),
ci.style = "bands", main = "", xlab = "Razdalja (km)")
# ali pa  z ggplot2
library(ggplot2)
ggplot(data = kovine, aes(x = razdalja, y = log(Pb)))+
geom_point() +
stat_smooth(method = "lm") +
xlab("Razdalja (km)") +
ylab("log(Pb)")
ggplot(data = kovine, aes(x = razdalja, y = Pb)) +
geom_point() +
xlab("Razdalja (km)") + ylab("Pb (mg/kg)") +
stat_function(fun=function(x) exp(5.36427-0.21302*x))
par(mfrow = c(1, 2))
with(postaje, plot(x, padavine, pch = 16))
with(postaje, plot(z.nv, padavine, pch = 16))
model.m1 <- lm(padavine ~ x + z.nv, data = postaje)
par(mfrow = c(2, 2), oma = c(0, 0, 3, 0))
plot(model.m1)
avPlots(model.m1, ylim = c(-1000, 1500), id = list(location = "avoid"))
summary(model.m1)
plot(Effect(c("z.nv", "x"), model.m1, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("x","z.nv"), model.m1, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
model.m2 <- lm(padavine ~ z.nv + x + z.nv:x , data = postaje)
model.matrix(model.m2)
plot(Effect(c("z.nv", "x"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("x","z.nv"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("z.nv", "x"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("x","z.nv"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("z.nv", "x"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
plot(Effect(c("x","z.nv"), model.m2, partial.residuals = TRUE),
ci.style = "none", lattice = list(layout = c(4, 1)))
par(mfrow = c(2, 2), oma = c(0, 0, 3, 0))
plot(model.m2)
outlierTest(model.m2)
avPlots(model.m2, ylim = c(-1000, 600), id = list(location = "avoid"))
outlierTest(model.m2)
model.m2$coeff
summary(model.m2)$r.squared
# napovedi modela
plot(predictorEffects(model.m2, ~.,xlevels = list(x = 4, z.nv = c(250, 500, 750, 1500))),
rows = 2, cols = 1, main = "", layout = c(4,1))
# napovedi modela
plot(predictorEffects(model.m2, ~.,xlevels = list(x = 4, z.nv = c(250, 500, 750, 1500))),
rows = 2, cols = 1, main = "", layout = c(4,1))
# podatke najdemo v paketu MASS v podatkovnem okviru mammals
library(MASS)
data(mammals)
summary(mammals)
scatterplot(brain ~ body, regLine = FALSE, smooth = FALSE,
id = list(method = 'mahal', n = 3), boxplots = 'xy',
xlab = "Masa telesa (kg)",
ylab = "Masa možganov (g)", pch = 16, data = mammals)
scatterplot(log10(brain) ~ log10(body), regLine = FALSE,
smooth = list(span = 0.5, spread = FALSE),
id = list(method = 'mahal', n = 3), boxplots = 'xy',
xlab = "log10(body)", ylab = "log10(brain)", pch = 16,
data = mammals)
model.m <- lm(log10(brain) ~ log10(body), data = mammals)
par(mfrow = c(2, 2), oma = c(0, 0, 2, 0))
plot(model.m)
outlierTest(model.m)
par(mfrow = c(1, 1))
influencePlot(model.m, xlab = "Vzvodi", ylab = "Studentizirani ostanki",
id = list(n = 3, location = "avoid")) # n = 3 -> 3 enote z največjimi vrednostmi
summary(model.m)
confint(model.m)
andy <- read.table("ANDY.txt", header = TRUE)
str(andy)
# višino dreves izrazimo v metrih
andy$height <- andy$height/3.2808
andy$buckets <- factor(andy$buckets)
summary(andy)
library(ggplot2)
ggplot(data = andy, aes(x = age, y = height, col = buckets)) +
geom_point() + xlab("Starost (leta)") + ylab("Visina dreves (m)")
mod.OLS <- lm(height ~ age * buckets, data = andy)
par(mfrow = c(2, 2))
plot(mod.OLS)
utez <- andy %>% group_by(age) %>%
summarise(w = 1/var(height))
utez
andy <- merge(andy, utez, by = "age")
View(andy)
par(mfrow = c(1, 1))
plot(andy$age, andy$w, pch = 16, type = c("b"))
mod.WLS <- lm(height ~ age * buckets, weights = w, data = andy)
par(mfrow = c(2, 2))
plot(mod.WLS)
par(mfrow = c(1, 1))
plot(fitted(mod.WLS), rstandard(mod.WLS), xlab = "Prilagojene vrednosti",
ylab = "Standardizirani ostanki")
abline(h = 0)
anova(mod.WLS)
anova(mod.OLS)
summary(mod.WLS)
plot(Effect(c("buckets"), mod.WLS), main = "", ylim = c(0, 16))
plot(Effect(c("buckets", "age"), mod.WLS), main = "", multiline = TRUE,
ci.style = "band", ylim = c(0, 16))
